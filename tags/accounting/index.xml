<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>accounting on Bryan's Blah Blog</title><link>https://bryanalves.github.io/tags/accounting/</link><description>Bryan's Blah Blog (accounting)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 07 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://bryanalves.github.io/tags/accounting/index.xml" rel="self" type="application/rss+xml"/><item><title>Beancount Recommended Structure</title><link>https://bryanalves.github.io/posts/beancount-recommended-structure/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/beancount-recommended-structure/</guid><description>&lt;p>By now, your beancount file might be getting a bit unwieldy and hard to understand. You have accounts, commodities, transactions, prices, plugins, settings, and more. Thankfully, beancount provides a way to help provide some structure, the &lt;code>include&lt;/code> directive. This lets you split your ledger up into multiple files. Here&amp;rsquo;s a recommended structure:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>option &amp;#34;title&amp;#34; &amp;#34;Main Ledger&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; more options
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.check_average_cost&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; more plugins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/accounts.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include data/closed_accounts.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/commodities.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/prices.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2010.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2011.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2012.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2013.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2014.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2015.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2016.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2017.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2018.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2019.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2020.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2021.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/2022.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include &amp;#34;data/incoming.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A couple of notes:&lt;/p>
&lt;ul>
&lt;li>I separated accounts from closed accounts. This allows me to have a clearer view into current accounts if necessary to make changes (for example, renaming).&lt;/li>
&lt;li>I do transactions per year. This helps to make older transactions &amp;ldquo;feel immutable&amp;rdquo; and safer. Also less stuff to sort through if I&amp;rsquo;m looking for a specific transaction.&lt;/li>
&lt;li>I create an &amp;ldquo;incoming&amp;rdquo; file that is usually blank (and checked in as blank into version control). I treat this as a staging area for adding lots of transactions at once (for example, monthly sync from importers). Get everything right, make &lt;code>bean-check&lt;/code> pass, and then cut/paste into the correct year.&lt;/li>
&lt;li>All of these files are in a &lt;code>data&lt;/code> subdirectory. This structure makes code/data separation a bit easier and cleaner in my opinion.&lt;/li>
&lt;/ul></description></item><item><title>Beancount Plugins and Options</title><link>https://bryanalves.github.io/posts/beancount-plugins-and-options/</link><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/beancount-plugins-and-options/</guid><description>&lt;p>Options allow you to change the behavior of your beancount ledger. We&amp;rsquo;ve already seen one to specify the main operating currency. The list of the rest is codified &lt;a href="https://github.com/beancount/beancount/blob/2.3.5/beancount/parser/options.py">here&lt;/a>. My recommendations are as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>option &amp;#34;title&amp;#34; &amp;#34;Main Ledger&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option &amp;#34;documents&amp;#34; &amp;#34;data/documents&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option &amp;#34;operating_currency&amp;#34; &amp;#34;USD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option &amp;#34;infer_tolerance_from_cost&amp;#34; &amp;#34;TRUE&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option &amp;#34;inferred_tolerance_multiplier&amp;#34; &amp;#34;1.1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option &amp;#34;insert_pythonpath&amp;#34; &amp;#34;True&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See the above link for explanations about what these are used for.&lt;/p>
&lt;p>Plugins run during the processing and parsing steps, and can be used to do things like modify entries in real time, add new entries, or add additional assertions or constraints to do error reporting on. The list of plugins included with beancount is &lt;a href="https://github.com/beancount/beancount/tree/2.3.5/beancount/plugins">here&lt;/a>. I recommend the following plugins:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.check_average_cost&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.check_commodity&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.check_closing&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.coherent_cost&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.noduplicates&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.onecommodity&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.sellgains&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;beancount.plugins.tag_pending&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These help ensure that accounts are used for a single commodity, protect against accidental duplicates, help ensure that capital gains are reported correctly, and will help protect erroneous price conversions that aren&amp;rsquo;t expected.&lt;/p>
&lt;h1 id="adding-your-own-plugins" >Adding your own plugins
&lt;span>
&lt;a href="#adding-your-own-plugins">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>By using the &lt;code>insert_pythonpath&lt;/code> option, you can add arbitrary python code to be executable. Create a &lt;code>lib/plugins&lt;/code> directory from the same relative path that your &lt;code>ledger.beancount&lt;/code> file is, and you can write your own plugins (or copy from other sources). Then you can specify their use like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>plugin &amp;#34;lib.plugins.amortize_over&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plugin &amp;#34;lib.plugins.todo_as_error&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="configuring-fava" >Configuring fava
&lt;span>
&lt;a href="#configuring-fava">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Fava options are configured using the &lt;code>custom &amp;quot;fava-option&amp;quot;&lt;/code> directive. A list of fava options can be found &lt;a href="https://github.com/beancount/fava/blob/main/src/fava/help/options.md">here&lt;/a>. Here&amp;rsquo;s a sample config that will enable use of the import UI (more about this later), along with some other sensible defaults:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-option&amp;#34; &amp;#34;show-accounts-with-zero-transactions&amp;#34; &amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-option&amp;#34; &amp;#34;show-accounts-with-zero-balance&amp;#34; &amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-option&amp;#34; &amp;#34;import-config&amp;#34; &amp;#34;./import.config&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-option&amp;#34; &amp;#34;import-dirs&amp;#34; &amp;#34;./import-input/&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-option&amp;#34; &amp;#34;insert-entry&amp;#34; &amp;#34;incoming.beancount&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-option&amp;#34; &amp;#34;invert-income-liabilities-equity&amp;#34; &amp;#34;true&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-option&amp;#34; &amp;#34;default-page&amp;#34; &amp;#34;/income_statement/?time=year&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="fava-extensions" >Fava extensions
&lt;span>
&lt;a href="#fava-extensions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Fava extensions add entries to the left hand navigation to provide different views into data. Some examples of things available are some budgets, some data visualizations, and some ways to report on capital gains. If you want to write your own, you can add them to &lt;code>lib/fava_ext&lt;/code> and then configure them like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-extension&amp;#34; &amp;#34;lib.fava_ext.short_term_gains&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2010-01-01 custom &amp;#34;fava-extension&amp;#34; &amp;#34;lib.fava_ext.long_term_gains&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Adding Price Information to Beancount</title><link>https://bryanalves.github.io/posts/adding-price-information-to-beancount/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/adding-price-information-to-beancount/</guid><description>&lt;p>Once you&amp;rsquo;ve recorded some transactions with stocks, the price of those stocks changes over time. Ideally, running &lt;code>bean-report ledger.beancount networth&lt;/code> would take into account the current prices of your assets, as opposed to being limited to the price of the assets as entered on the transaction date. The &lt;code>price&lt;/code> directive allows for this. It&amp;rsquo;s simple to use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-29 price VTSAX 98 USD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it. Add price directives whenever you want. But it&amp;rsquo;s even easier than that! Most directives in beancount support meta attributes. An important one is the &lt;code>price&lt;/code> attribute for a commodity, which will allow you to use a tool called &lt;code>bean-price&lt;/code> (included with beancount), to look up prices automatically. It supports several providers, but a common choice is Yahoo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 commodity VTSAX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> price: &amp;#34;USD:yahoo/VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you can run &lt;code>bean-price&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>% bean-price ledger.beancount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-29 price VTSAX 98 USD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can redirect this output directly to a beancount file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>% bean-price ledger.beancount &amp;gt;&amp;gt; ledger.beancount
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The tool will (be default) take into account existing price entries, and be idempotent. So running hte above command twice will not add two price directives to your file.&lt;/p></description></item><item><title>Adding Commodities and Investments</title><link>https://bryanalves.github.io/posts/adding-commodities-and-investments/</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/adding-commodities-and-investments/</guid><description>&lt;p>So far we&amp;rsquo;ve worked only with USD as a currency. Beancount also supports commodities held at cost. This means that holding onto something that was acquired on a specific date and with a cost basis. The most typical example of this is a unit of stock or a mutual fund. Here is an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 commodity VTSAX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:Brokerage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-27 txn &amp;#34;Acquire some VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:Brokerage 10 VTSAX {100 USD}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-28 txn &amp;#34;Acquire some more VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:Brokerage 10 VTSAX {100 USD}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After this, &lt;code>Assets:Brokerage&lt;/code> has 20 total units of VTSAX, but it&amp;rsquo;s recorded as two separate holdings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># bean-report ledger.beancount holdings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Account Units Currency Cost Currency Average Cost Price Book Value Market Value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------- -------- -------- ------------- ------------ ----- ---------- ------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Assets:Brokerage 10.00 VTSAX USD 100.00 1,000.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Assets:Brokerage 10.00 VTSAX USD 100.00 1,000.00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is because when you sell them, you need to keep track of which you sell, so you can recognize the correct capital gains. Beancount uses 3 pieces of information for this:&lt;/p>
&lt;ul>
&lt;li>The acquisition cost (must be specified)&lt;/li>
&lt;li>The acquisition date (defaults to the date of the transaction)&lt;/li>
&lt;li>An optional label or id&lt;/li>
&lt;/ul>
&lt;p>When selling, you must specify enough information to uniquely identify the lots you are intending to sell. If all of your lots are acquired at different prices, you can specify just the price. If all of your lots are acquired on different dates, then you can just specify the date. I recommend explicitly specifying both the date and price when selling, as it will help to reduce errors (and makes the file easier to read):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-29 txn &amp;#34;Sell VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:Brokerage -10 VTSAX {100 USD, 2022-08-27}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that this assumes that you sell the unit for exactly what you paid for it. This is typically not the case! When you sell for a different price, you recognize either a capital gain or a loss. This is typically recorded using an &lt;code>Income&lt;/code> account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Income:Gains:Short-Term:Brokerage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Income:Gains:Long-Term:Brokerage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-29 txn &amp;#34;Sell VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:Brokerage -10 VTSAX {100 USD, 2022-08-27}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 110 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Income:Gains:Short-Term:Brokerage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will put 10 USD into an account to track your short-term capital gains. This is a US-centric interpretation of asset selling; consult your local laws to make sure you get the details right for recording. An additional step is to specify the selling cost, which is usually only used for documentation. A plugin (discussed later) can help you verify things by using this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-29 txn &amp;#34;Sell VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:Brokerage -10 VTSAX {100 USD, 2022-08-27} @ 101 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 110 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Income:Gains:Short-Term:Brokerage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or with @@ to track the full cost&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-29 txn &amp;#34;Sell VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:Brokerage -10 VTSAX {100 USD, 2022-08-27} @@ 110 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 110 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Income:Gains:Short-Term:Brokerage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default, all accounts are treated as &lt;code>STRICT&lt;/code>, meaning that bean-check will tell you if you get any of these details wrong. This is analogous to selling by lot id, or spec id by most brokers. There are other options:&lt;/p>
&lt;ul>
&lt;li>&lt;code>NONE&lt;/code> which lets you do whatever you want, including things like negative assets. You should ideally never need to use this.&lt;/li>
&lt;li>&lt;code>FIFO&lt;/code>, which sells oldest things first&lt;/li>
&lt;li>&lt;code>LIFO&lt;/code>, which sells newest things first&lt;/li>
&lt;/ul>
&lt;p>When using FIFO and LIFO, you don&amp;rsquo;t need to specify price and date when selling:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-29 txn &amp;#34;Sell VTSAX&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:Brokerage -10 VTSAX {} @ 101 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 110 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Income:Gains:Short-Term:Brokerage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With &lt;code>FIFO&lt;/code>, it will sell the 10 units acquired on 2022-08-27 in our example. With &lt;code>LIFO&lt;/code>, it will sell the 2022-08-28 units. LIFO/FIFO are especially useful for retirement accounts, where you don&amp;rsquo;t really want to track the gains, have no special tax treatment, and you ultimately just care about the total units held (with an approximately correct cost basis for reporting).&lt;/p>
&lt;p>You specify the booking method when opening the account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:Brokerage &amp;#34;LIFO&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, you will probably find it helpful to create sub-accounts for each commodity you plan on using. This will help to reduce errors, makes interop with some other tools better, and will make some reports easier to read:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:Brokerage:VTSAX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 Income:Gains:Short-Term:Brokerage:VTSAX
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The income account is optional, but I tend to take the philosophy of more accounts is better than fewer.&lt;/p>
&lt;p>Some summary guidelines:&lt;/p>
&lt;ul>
&lt;li>Create an account per commodity&lt;/li>
&lt;li>When acquiring units, always specify the acquisition cost.&lt;/li>
&lt;li>When selling units, always specify the acquisition cost and the acquisition date. Also, unless the unit is being directly transferred (rare!), always specify the selling cost, either per unit with &lt;code>@&lt;/code> or full cost with &lt;code>@@&lt;/code>&lt;/li>
&lt;li>Create income accounts to track gains according to your tax laws (usually short-term and long-term). Optionally make these granular to each unit type, instead of institution.&lt;/li>
&lt;li>Structure income accounts as `Income:{income-type}:{income-subtype-optional}:{institution}:{currency-or-unit}. It is MUCH more common to want a report such as &amp;ldquo;all short-term capital gains&amp;rdquo; than &amp;ldquo;all gains of any type for institution x&amp;rdquo;. Both are possible, but the recommended structure makes the first report essentially free.&lt;/li>
&lt;/ul></description></item><item><title>Your First Beancount Ledger</title><link>https://bryanalves.github.io/posts/your-first-beancount-ledger/</link><pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/your-first-beancount-ledger/</guid><description>&lt;p>Getting started with beancount is easy &amp;ndash; it&amp;rsquo;s a plaintext file! Create a blank &lt;code>ledger.beancount&lt;/code> file if you haven&amp;rsquo;t already, and run &lt;code>bean-check&lt;/code> on it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>bean-check ledger.beancount
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An empty file is valid. You can and should run &lt;code>bean-check&lt;/code> regularly to ensure that what you are doing stays accurate as you go, just like red-green refactoring.&lt;/p>
&lt;h1 id="your-first-account" >Your first account
&lt;span>
&lt;a href="#your-first-account">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>You create accounts using the &lt;code>open&lt;/code> directive. Let&amp;rsquo;s assume you have a checking account. The syntax will look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The format of the open directive is &lt;code>{date} open {account}&lt;/code>. Accounts are colon-separated. The first component must be one of the &lt;a href="https://bryanalves.github.io/posts/a-brief-overview-of-account-types/">5 account types&lt;/a> (&lt;code>Assets&lt;/code>, &lt;code>Liabilities&lt;/code>, &lt;code>Equity&lt;/code>, &lt;code>Expenses&lt;/code>, &lt;code>Income&lt;/code>). Everything after the first component can be structured however you want. Accounts will tend to have a hierarchical structure, and the result is called your chart of accounts. For assets and liabilities, I recommend grouping things by institution (like bank-name), and then account. If you are tracking accounts for multiple people (such as spouse), having a higher-level grouping by person can make things easier, such as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:Me:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:Me:CapitalTwo:Savings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:Spouse:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:Joint:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The structure is entirely up to you. The date of the open directive just needs to be a date before the first recorded transaction on the account.&lt;/p>
&lt;p>You&amp;rsquo;ll also need an account to source opening balances, so create that now:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Equity:Opening-Balances
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="your-first-transaction" >Your first transaction
&lt;span>
&lt;a href="#your-first-transaction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Now we can fund the account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-01 txn &amp;#34;Opening Balance&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 4000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Transactions take the form of &lt;code>{date} txn &amp;quot;{narration}&amp;quot; &amp;quot;{optional payee}&amp;quot;&lt;/code>, followed by a series of two or more postings. Postings can take a couple of forms, the most common of which is &lt;code>{account} {amount-change} {currency}&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>Postings are indented.&lt;/li>
&lt;li>&lt;em>Postings must sum to zero&lt;/em>. &lt;code>bean-check&lt;/code> will fail and yell if this invariant is violated.&lt;/li>
&lt;li>Currency is a series of at least 2 capital letters. Preceding dollar signs are not used in beancount.&lt;/li>
&lt;/ul>
&lt;p>You&amp;rsquo;ll note that the &lt;code>Equity:Opening-Balances&lt;/code> posting has no amount to change. Beancount will automatically infer up to one posting for you in order to make your life easier. This is equivalent to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-01 txn &amp;#34;Opening Balance&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 4000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances -4000 USD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There can be more than 2 postings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-01 txn &amp;#34;Opening Balance&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 4000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Savings 10000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances -14000 USD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remember that at most one posting can have it&amp;rsquo;s value inferred:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-01 txn &amp;#34;Opening Balance&amp;#34; ; does not work
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 4000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Savings 10000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(Note: The &lt;code>; does not work&lt;/code> above is valid syntax for a comment)&lt;/p>
&lt;p>Ordering of postings does not matter:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-01 txn &amp;#34;Opening Balance&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances -14000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 4000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Savings 10000 USD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="your-first-expense" >Your first expense
&lt;span>
&lt;a href="#your-first-expense">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Let&amp;rsquo;s record an expense:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Expenses:Groceries
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-02 txn &amp;#34;Buy Groceries&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expenses:Groceries 40 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remember, transactions must sum to zero, so you increase your expenses to decrease your account balance. This is equivalent to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-01-01 open Expenses:Groceries
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-02 txn &amp;#34;Buy Groceries&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking -40 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expenses:Groceries
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Record whichever way makes more sense to you, or manually specify the amounts in both postings. I tend to skip one of the postings for simple transactions like this. Importers, which we&amp;rsquo;ll talk about in a subsequent post, will simplify a lot of this as well.&lt;/p>
&lt;p>Additionally, ordering of directives does not matter in beancount, with the exception of some intraday transactions. This will almost never come up or matter, but it does generally make your life easier.&lt;/p>
&lt;h1 id="a-brief-view-into-reports" >A brief view into reports
&lt;span>
&lt;a href="#a-brief-view-into-reports">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Before we do some reporting, we need to tell beancount which currency is our operating currency. US dollars (or whatever you use) are not special in beancount. &lt;code>USD&lt;/code> is just a string of 3 characters. You configure beancount using &lt;code>option&lt;/code> directives. You can tell beancount that you want reports in USD by specifying:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>option &amp;#34;operating_currency&amp;#34; &amp;#34;USD&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will make more sense if and when you start tracking other assets, such as stocks, mutual funds, or if you travel and actually work with multiple currencies&lt;/p>
&lt;p>With the final form:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>option &amp;#34;operating_currency&amp;#34; &amp;#34;USD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Assets:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Expenses:Groceries
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-01 open Equity:Opening-Balances
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-01 txn &amp;#34;Opening Balance&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking 4000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Equity:Opening-Balances -4000 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-08-02 txn &amp;#34;Buy Groceries&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expenses:Groceries 40 USD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assets:CapitalTwo:Checking
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can run &lt;code>bean-check ledger.beancount&lt;/code> and receive no feedback, telling us out file is valid. We can get our net worth using&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>bean-report ledger.beancount networth
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will tell us the current value of all of our assets, minus any liabilities that we have.&lt;/p>
&lt;p>You can see the current balance of all of your accounts by doing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>bean-report ledger.beancount balances
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also start to visualize the data with fava:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>fava ledger.beancount
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then visit &lt;a href="http://localhost:5000">http://localhost:5000&lt;/a> in your browser. Fava won&amp;rsquo;t make sense at first, but paradoxically the more data you add, the more useful it will become.&lt;/p></description></item><item><title>A Brief Overview of Account Types</title><link>https://bryanalves.github.io/posts/a-brief-overview-of-account-types/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/a-brief-overview-of-account-types/</guid><description>&lt;p>In double-entry accounting, there are 5 account types. Here we will summarize them from the scope of personal finance, and provide some sample use cases and cash flows so you can help identify when to create which type of account.&lt;/p>
&lt;h1 id="what-is-an-account" >What is an account?
&lt;span>
&lt;a href="#what-is-an-account">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Most people will properly identify accounts as things like checking accounts at banks, or your credit card, or maybe a mortgage or loan. Things that typically have identifying features such as an account number, are associated with an institution, etc. While these &lt;em>ARE&lt;/em> accounts, the actual definition of an account is much more broad:&lt;/p>
&lt;blockquote>
&lt;p>An account is a named list of transactions&lt;/p>
&lt;/blockquote>
&lt;p>It doesn&amp;rsquo;t need to be owned by an institution. It doesn&amp;rsquo;t have to have an account number. It doesn&amp;rsquo;t even have to have a known representation outside of your accounting system! Getting over this hurdle of understanding will make understanding &amp;ldquo;accounts&amp;rdquo; in double-entry personal finance &lt;em>MUCH&lt;/em> easier. It comes with a bit of practice, and it eventually clicks.&lt;/p>
&lt;p>A sample use case to define this is savings sub-accounts. Some people like to create things like the &amp;ldquo;save for a holiday fund&amp;rdquo;, or the &amp;ldquo;new car fund&amp;rdquo;, and many financial institutions support this functionality in their interface. For those that don&amp;rsquo;t, however, you can create these accounts manually on your side and track it yourself. There&amp;rsquo;s nothing stopping you from creating as many sub-accounts as you want manually and &amp;ldquo;transferring&amp;rdquo; money between them within your own ledger. Beancount will even helpfully report the balance of the main account, even if there aren&amp;rsquo;t any actual transactions there, by rolling up the sub-accounts so you can still see the whole picture.&lt;/p>
&lt;p>In my opinion, as a general rule, it&amp;rsquo;s better to create more accounts than fewer.&lt;/p>
&lt;h1 id="debits-and-credits-need-not-apply" >Debits and credits need not apply
&lt;span>
&lt;a href="#debits-and-credits-need-not-apply">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Traditional double entry accounting used the terms debit and credit to reflect changes to accounts, and different types of accounts either increased or decreased based on debits or credits. It&amp;rsquo;s easy to find the history of this, but it isn&amp;rsquo;t particularly relevant for most computer-generated double entry systems. Beancount (and others) use the simpler &amp;ldquo;increase&amp;rdquo; and &amp;ldquo;decrease&amp;rdquo; verbs, as well as allowing negative numbers.&lt;/p>
&lt;h1 id="account-type-1-assets" >Account type 1: Assets
&lt;span>
&lt;a href="#account-type-1-assets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Assets are what most people first think of when they think of accounts. Assets are anything you own or have control over that has value. The most obvious examples are your checking and savings accounts. Your house, if you own one, is also an asset, as well as other physical property that has cash value (cars, collectibles, art). Also your investment accounts, whether they are normal brokerage accounts or retirement accounts. If it has a positive value, and you regularly receive a statement for it, it&amp;rsquo;s almost certainly an asset account. Obviously your cash in your wallet, or cash that you keep on hand in the house or in your car for emergencies can also be asset accounts.&lt;/p>
&lt;p>Asset accounts don&amp;rsquo;t need to have value denominated in your country&amp;rsquo;s native currency. You could track work vacation hours for example.&lt;/p>
&lt;p>A final uncommon thing that you may see as an asset account is an IOU. In the business world this would be modeled as accounts receivable. If you have a friend who owes you some money, you may choose to record that as an account to keep track of how much they owe you. This is another great example of an account that doesn&amp;rsquo;t have a number, and doesn&amp;rsquo;t actually have a representation outside of your ledger.&lt;/p>
&lt;ul>
&lt;li>Asset accounts are almost always positive.&lt;/li>
&lt;li>They can increase or decrease due to transfers from other asset accounts.&lt;/li>
&lt;li>The can increase from income (salary, dividends, capital gains, etc).&lt;/li>
&lt;li>They can decrease from funding an expense.&lt;/li>
&lt;li>They can decrease from paying off liabilities.&lt;/li>
&lt;/ul>
&lt;h1 id="account-type-2-liabilities" >Account type 2: Liabilities
&lt;span>
&lt;a href="#account-type-2-liabilities">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Liabilities are often the second most common thing that people will think of when thinking of accounts. These are things your own or have control over that you owe money to. The most common examples are credit cards and loans. Your mortgage, if you have one, is also a liability.&lt;/p>
&lt;p>The IOU asset account can also be a liability account if you owe a friend money. This is analogous to accounts payable from the business world.&lt;/p>
&lt;ul>
&lt;li>Liabiliity accounts are almost always negative (or zero).&lt;/li>
&lt;li>They can decrease from funding an expense.&lt;/li>
&lt;li>They can increase from a transfer from an asset account (representing a payment towards the liability)&lt;/li>
&lt;li>They can increase from a transfer representing cash back rewards or similar. This is usually modeled as an income account.&lt;/li>
&lt;li>They can increase or decrease due to transfers from other liability accounts (representing a balance transfer).&lt;/li>
&lt;/ul>
&lt;h1 id="account-type-3-expenses" >Account type 3: Expenses
&lt;span>
&lt;a href="#account-type-3-expenses">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Expense accounts are when double-entry accounting starts to really differentiate itself from other methods. Expense accounts are analogous to &amp;ldquo;spending categories&amp;rdquo; in Mint or other tools. In double entry accounting however they are &amp;ldquo;just another account.&amp;rdquo; This homogeneity has a lot of benefits. When getting started though, just thinking of them as spending categories will get you a long way down the path. You can create as many expense accounts as you want; they are all internal to your ledger system. The only thing to keep in mind is that this is an account, not a tag, meaning that you can&amp;rsquo;t attribute multiple expense accounts to a single transaction (unless you split the transaction).&lt;/p>
&lt;p>Some examples of expense accounts include:&lt;/p>
&lt;ul>
&lt;li>Groceries&lt;/li>
&lt;li>Restaurants&lt;/li>
&lt;li>Auto repairs&lt;/li>
&lt;li>Investment fees&lt;/li>
&lt;li>Insurance&lt;/li>
&lt;li>Taxes&lt;/li>
&lt;/ul>
&lt;p>Any set of expense accounts that makes sense to you and will let you track what you want to track will work. One of the benefits of plain text accounting is that doing things like renaming accounts, or being more (or less) fine-grained in the future is pretty easy to do. I also always keep a &amp;ldquo;Miscellaneous&amp;rdquo; expense account because categorizing everything perfectly isn&amp;rsquo;t possible, or if it is possible is way too much work.&lt;/p>
&lt;ul>
&lt;li>Expense accounts are almost always positive (this is counterintuitive!)&lt;/li>
&lt;li>Expense accounts are increased by transfers from assets or liabilities to represent purchases.&lt;/li>
&lt;li>Expense accounts are decreased product returns.&lt;/li>
&lt;/ul>
&lt;h1 id="account-type-4-income-sometimes-called-revenue" >Account type 4: Income (sometimes called Revenue)
&lt;span>
&lt;a href="#account-type-4-income-sometimes-called-revenue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Income accounts are one of the most confusing account types when first coming across double entry accounting. People generally think of income as &amp;ldquo;making money,&amp;rdquo; yet income accounts are almost always monotonically &lt;em>decreasing&lt;/em>, not increasing!&lt;/p>
&lt;p>The easiest way to reason about this is to think about income accounts as &amp;ldquo;somebody elses bank account.&amp;rdquo; When you receive income, somebody is transferring money from their account, to yours. Their account decreases, yours increases. This insight helped me really understand income accounts.&lt;/p>
&lt;p>The most obvious example of an income account is for your paycheck. There are 2 ways to record this, by net or by gross.&lt;/p>
&lt;p>By net is a simple transfer of net pay from the income account to the desired asset account. By gross involves transcribing all of the details of the paystub. The income account will decrease by the gross pay, and there will be legs of the transaction for taxes, insurance, retirement contributions, health insurance and other benefit deductions.&lt;/p>
&lt;blockquote>
&lt;p>A transaction involves 2 &lt;em>or more&lt;/em> accounts. Another huge difference between other systems!&lt;/p>
&lt;/blockquote>
&lt;p>By gross sounds complicated, but remember, most of your paychecks are very repetitive, and this is just plain text. Copy and paste!&lt;/p>
&lt;p>Other examples of income accounts include bank interest, credit card cash back rewards, investment dividends, investment capital gains, and gifts. It&amp;rsquo;s also usually handy to have a miscellaneous income account here because sometimes things don&amp;rsquo;t fit into neat buckets.&lt;/p>
&lt;h1 id="the-final-type-equity-sometimes-called-capital" >The final type: Equity (sometimes called Capital)
&lt;span>
&lt;a href="#the-final-type-equity-sometimes-called-capital">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Equity accounts are not very relevant for most personal finance setups. The most common use by far is the &amp;ldquo;opening balances&amp;rdquo; account, which is used to give accounts their starting balance. Because you typically start your double entry ledger sometime in the future after the account has been opened, the starting balance from where you start tracking each transaction needs to come from somewhere.&lt;/p>
&lt;p>Another use for equity accounts is for things that you don&amp;rsquo;t otherwise want to track. When you have capital gains in retirement accounts for example, those capital gains need to be recorded somewhere so that transactions balance. You &lt;em>could&lt;/em> create an income account for this, but I find it better to &amp;ldquo;hide&amp;rdquo; this detail in an equity account. The same can be done for retirement accounts that have expenses and fees as separate line items instead of just rolled up into the fund&amp;rsquo;s expense ratio. These &lt;em>could&lt;/em> be recorded into an expense account, but again I prefer to &amp;ldquo;hide&amp;rdquo; it.&lt;/p>
&lt;p>The last 2 things you might see equity accounts used for are conversions or rounding errors. Because of beancount&amp;rsquo;s robust currency and inventory system, you probably won&amp;rsquo;t find a need for a conversion account. A rounding errors account can be helpful if things just don&amp;rsquo;t line up (a statement records fractions of a cent by doesn&amp;rsquo;t tell you, for example). It can be a useful escape hatch. Be really careful relying on this though, as it&amp;rsquo;s more likely that you are doing something wrong if you have large rounding errors! At the time of writing, I have thousands of transactions across multiple years, and the sum of my rounding errors account is 1 cent.&lt;/p>
&lt;h1 id="this-seems-hard-isnt-there-something-simpler" >This seems hard, isn&amp;rsquo;t there something simpler?
&lt;span>
&lt;a href="#this-seems-hard-isnt-there-something-simpler">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>There are simpler things, yes. They are not double-entry accounting. While it may be possible to simplify some of this, you&amp;rsquo;ll find that you end up needing or using all of these concepts pretty shortly after getting started. Give it a little time and practice and it will make sense.&lt;/p>
&lt;p>The comments from &lt;a href="https://money.stackexchange.com/questions/47561/simplified-version-of-double-entry-bookkeeping-for-personal-and-business-finance">this stackexchange post&lt;/a> do a good job of explaining why simplifying this might not make sense. Trust the process a little bit!&lt;/p></description></item><item><title>Getting started with Beancount</title><link>https://bryanalves.github.io/posts/getting-started-with-beancount/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/getting-started-with-beancount/</guid><description>&lt;p>&lt;a href="https://github.com/beancount/beancount">Beancount&lt;/a> is &lt;a href="https://en.wikipedia.org/wiki/Double-entry_bookkeeping">double entry accounting&lt;/a> software that&amp;rsquo;s based on the &lt;a href="https://plaintextaccounting.org/">plain text accounting&lt;/a> principle. Being based on plain text allows a lot of programmatic flexibility, as well as portability.&lt;/p>
&lt;p>I decided to track all of my personal finances using the tool, and want to provide a guide/cookbook to my methods. Documentation for the tool can be a bit scattered and incomplete, so I hope this cookbook-style guide helps to fill in some gaps.&lt;/p>
&lt;h1 id="journey-to-ptabeancount" >Journey to PTA/Beancount
&lt;span>
&lt;a href="#journey-to-ptabeancount">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Before beancount, tools used varied from some custom spreadsheets, &lt;a href="www.mint.com">Mint&lt;/a>, and &lt;a href="www.gnucash.org">GnuCash&lt;/a>. All of these tools have their uses, and depending on the level of effort you want to expend on your finances can be suitable.&lt;/p>
&lt;p>I moved away from Mint for a couple of reasons. The first is the generic privacy/trust concerns. Also, at the time, a large portion of the reporting was run by Flash, which was being phased out in browsers and so the site lost a lot of utility. It also doesn&amp;rsquo;t actually let you dig that deep into reporting, and errors in categorizations were a pain to deal with. Finally, syncing would randomly stop for extended periods of time, or weird duplicating things would happen. It is a good tool for getting an overall financial picture, but not a detailed one.&lt;/p>
&lt;p>Custom spreadsheets can work fairly well for small scale tracking of things. One of the big downsides here is that it is manual entry; things are more error prone. If you want to track balances of accounts over time and get a good manual overall picture, a spreadsheet can be quite handy. I still have a spreadsheet for some tracking/estimating a few things that I haven&amp;rsquo;t programmed in Beancount yet.&lt;/p>
&lt;p>The next big step is into true double-entry accounting. If you have never done double-entry accounting, it conceptually might scare you, and you might think it&amp;rsquo;s overkill for personal finances. That may be; your situation may vary. I found that after some upfront effort to understand things, and getting a system in place, things are actually much easier than with other tools.&lt;/p>
&lt;p>GnuCash was my first foray into this. It has pretty good support for importing statements/documents, a reasonable user interface (which can make sharing the results/reporting of your finances easier). I found it to be significantly lacking in terms of tracking values of investments, including doing things such as rounding values that shouldn&amp;rsquo;t be rounded. Ultimately I didn&amp;rsquo;t have the control that I wanted, and the extensibility seemed lacking.&lt;/p>
&lt;p>Which brings us to plain text accounting. It&amp;rsquo;s just text! If you can program, you can parse this data and do very interesting arbitrary things. There are 2 primary directions you can go here: ledger and it&amp;rsquo;s derivatives (like hledger), and beancount. I picked beancount because of it&amp;rsquo;s stated goal of doing a more thorough and strict job of tracking investment values, and it being written in python and having a better (in my opinion) extensibility story.&lt;/p>
&lt;p>A lot of concepts are shared between ledger and beancount; there is even a script that can take an accounting file written in ledger and make it compatible with beancount. This guide will talk about some generic double entry concepts, but many of the concepts will be beancount specific.&lt;/p>
&lt;p>The final reason that I preferred beancount is &lt;a href="https://github.com/beancount/fava">Fava&lt;/a>, the web user interface. At first glance it can be quite complicated and overwhelming, but once you understand the primary accounting concepts, it is a really powerful tool for digging around.&lt;/p>
&lt;h1 id="installing-beancount" >Installing Beancount
&lt;span>
&lt;a href="#installing-beancount">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Beancount comes as a python package; your operating system might already have it packaged up, ready to install. I prefer to run it from a python virtual environment though, to ensure I have the latest versions of things. There&amp;rsquo;s a few tools that you&amp;rsquo;ll likely benefit from that you&amp;rsquo;ll also want to install, such as fava, some importers (more about these later), and maybe jinja or pandas if you end up writing custom reports. I like &lt;a href="https://github.com/jazzband/pip-tools">pip-tools&lt;/a> for this purpose. If you have a different preferred flow for working with python packages, go for it.&lt;/p>
&lt;p>With pip-tools, the following requirements.in file will get you something pretty usable:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>beancount &amp;gt;=2.3.5, &amp;lt;3.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>beancount-cryptoassets @ https://github.com/xuhcc/beancount-cryptoassets/archive/master.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>beancount-import &amp;gt;=1.3.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>beancount-portfolio-allocation &amp;gt;=0.3.0, &amp;lt;1.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>beancount-reds-importers &amp;gt;=0.5.1, &amp;lt;1.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Jinja2 &amp;gt;=3.0.3, &amp;lt;4.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pandas &amp;gt;=1.3.5, &amp;lt;2.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyright &amp;gt;=0.0.13, &amp;lt;1.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>smart-importer &amp;gt;=0.3, &amp;lt;1.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>click &amp;gt;=8.1.3, &amp;lt;9.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fava &amp;gt;=1.22.2, &amp;lt;2.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a directory to store your financial data and code, save the above as &lt;code>requirements.in&lt;/code>, then:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python -m venv .venv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source .venv/bin/activate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip install pip-tools
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip-compile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip-install -r requirements.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch ledger.beancount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bean-check -v ledger.beancount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deactivate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, whenever you want to work with beancount, &lt;code>cd&lt;/code> into your financial directory, &lt;code>source .venv/bin/activate&lt;/code> and your shell prompt will change to indicate you are in a python virtual environment. When you are done, run &lt;code>deactivate&lt;/code>. If you want to check this into version control, you&amp;rsquo;ll want to check in both &lt;code>requirements.in&lt;/code> and &lt;code>requirements.txt&lt;/code>, and you&amp;rsquo;ll want to exclude &lt;code>.venv&lt;/code>&lt;/p>
&lt;h1 id="resources" >Resources
&lt;span>
&lt;a href="#resources">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;ul>
&lt;li>&lt;a href="https://plaintextaccounting.org/">https://plaintextaccounting.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.reddit.com/r/plaintextaccounting/">https://www.reddit.com/r/plaintextaccounting/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/beancount/beancount">https://github.com/beancount/beancount&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/beancount/fava">https://github.com/beancount/fava&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>