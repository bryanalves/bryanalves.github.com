<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dns on Bryan's Blah Blog</title><link>https://bryanalves.github.io/tags/dns/</link><description>Bryan's Blah Blog (dns)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Jul 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://bryanalves.github.io/tags/dns/index.xml" rel="self" type="application/rss+xml"/><item><title>Access LXC containers by name from host</title><link>https://bryanalves.github.io/posts/2015-07-03-lxc-dns-on-host/</link><pubDate>Fri, 03 Jul 2015 00:00:00 +0000</pubDate><guid>https://bryanalves.github.io/posts/2015-07-03-lxc-dns-on-host/</guid><description>&lt;p>In a &lt;a href="https://bryanalves.github.io/2015/07/02/enabling-lxc-archlinux-with-systemd-networkd/">previous installment&lt;/a> we configured systemd-networkd and lxc to play nicely together, along with docker. There was one problem with that setup, which is that the host could not find containers by name. This post addresses that.&lt;/p>
&lt;h3 id="lxc_domain" >LXC_DOMAIN
&lt;span>
&lt;a href="#lxc_domain">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>On Archlinux at least, LXC_DOMAIN is empty by default. It&amp;rsquo;s a good idea to set this to something to help segregate the LXC containers. I used .lxc, &lt;a href="https://support.comodo.com/index.php?/Knowledgebase/Article/View/722/16/acceptable-internal-domain-names">even though I probably shouldn&amp;rsquo;t&lt;/a>&lt;/p>
&lt;h3 id="systemd-networkd-to-the-rescue" >systemd-networkd to the rescue
&lt;span>
&lt;a href="#systemd-networkd-to-the-rescue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>In the previous post, I had mentioned that switching to systemd-networkd was probably just yak shaving. It pays off now though, as it makes handling upstream DNS a lot simpler with dnsmasq. First off, make sure that /etc/resolv.conf is a normal file, and &lt;strong>not&lt;/strong> symlinked to /run/systemd/resolve/resolv.conf as most guides suggest.&lt;/p>
&lt;p>Next, update dnsmasq.conf and add the following line:&lt;/p>
&lt;pre>&lt;code>resolv-file=/run/systemd/resolve/resolv.conf
&lt;/code>&lt;/pre>
&lt;p>Finally, add where your dnsmasq server listens to /etc/resolv.conf:&lt;/p>
&lt;pre>&lt;code>nameserver 10.0.3.1
&lt;/code>&lt;/pre>
&lt;p>Now, not only do you have access to LXC containers by name, but you have a local caching nameserver in place that you can do various thing with. This dnsmasq server does double-duty, so if you get too fancy it might be wise to separate concerns and create 2 dnsmasq instances, 1 for local caching and one solely for DNS/DHCP for LXC.&lt;/p></description></item></channel></rss>